env:  # Global defaults
  CIRRUS_CLONE_DEPTH: 1
  CIRRUS_LOG_TIMESTAMP: true
  PACKAGE_MANAGER_INSTALL: "apt-get update && apt-get install -y"
  MAKEJOBS: "-j10"
  TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
  CI_FAILFAST_TEST_LEAVE_DANGLING: "1"  # Cirrus CI does not care about dangling processes and setting this variable avoids killing the CI script itself on error

cirrus_ephemeral_worker_template_env: &CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV
  DANGER_RUN_CI_ON_HOST: "1"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system

persistent_worker_template_env: &PERSISTENT_WORKER_TEMPLATE_ENV
  RESTART_CI_DOCKER_BEFORE_RUN: "1"

persistent_worker_template: &PERSISTENT_WORKER_TEMPLATE
  persistent_worker: {}  # Only use this if the task does not care about the type at all

base_template: &BASE_TEMPLATE
  merge_base_script:
    # Require git (used in fingerprint_script).
    - git --version || ( apt-get update && apt-get install -y git )
    - if [ "$CIRRUS_PR" = "" ]; then exit 0; fi
    - git fetch --depth=1 $CIRRUS_REPO_CLONE_URL "pull/${CIRRUS_PR}/merge"
    - git checkout FETCH_HEAD  # Use merged changes to detect silent merge conflicts
                               # Also, the merge commit is used to lint COMMIT_RANGE="HEAD~..HEAD"

main_template: &MAIN_TEMPLATE
  timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out
  ccache_cache:
    folder: "/tmp/ccache_dir"
  ci_script:
    - ./ci/test_run_all.sh

container_depends_template: &CONTAINER_DEPENDS_TEMPLATE
  << : *BASE_TEMPLATE
  container:
    # https://cirrus-ci.org/faq/#are-there-any-limits
    # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel
    cpu: 2
    memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers
    dockerfile: ci/test_imagefile  # https://cirrus-ci.org/guide/docker-builder-vm/#dockerfile-as-a-ci-environment
  base_depends_built_cache:
    folder: "/ci_container_base/depends/built"
    fingerprint_script: echo $CIRRUS_TASK_NAME $(git rev-parse HEAD:depends)

global_task_template: &GLOBAL_TASK_TEMPLATE
  << : *CONTAINER_DEPENDS_TEMPLATE
  << : *MAIN_TEMPLATE

task:
  name: 'Win64-cross'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/ubuntu:noble"
      CI_IMAGE_PLATFORM: "linux/amd64"
      FILE_ENV: "./ci/test/00_setup_env_win64.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV

task:
  name: 'CentOS, depends, gui'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    docker_arguments:
      CI_IMAGE_NAME_TAG: "quay.io/centos/centos:stream10"
      FILE_ENV: "./ci/test/00_setup_env_native_centos.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV
    PACKAGE_MANAGER_INSTALL: "yum install -y"

task:
  name: 'previous releases, depends DEBUG'
  previous_releases_cache:
    folder: "releases"
  << : *GLOBAL_TASK_TEMPLATE
  container:
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/ubuntu:22.04"
      FILE_ENV: "./ci/test/00_setup_env_native_previous_releases.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV

task:
  name: 'TSan, depends, gui'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    cpu: 4
    memory: 16G  # The default memory is too small, so double everything
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/ubuntu:24.04"
      FILE_ENV: "./ci/test/00_setup_env_native_tsan.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV

task:
  name: 'MSan, depends'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/ubuntu:24.04"
      FILE_ENV: "./ci/test/00_setup_env_native_msan.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV
    MAKEJOBS: "-j4"  # Avoid excessive memory use due to MSan

task:
  name: 'multiprocess, i686, DEBUG'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    cpu: 4
    memory: 16G  # The default memory is too small, so double everything
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/ubuntu:24.04"
      CI_IMAGE_PLATFORM: "linux/amd64"
      FILE_ENV: "./ci/test/00_setup_env_i686_multiprocess.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV

task:
  name: 'no wallet, libgroestlcoinkernel'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/debian:bookworm"
      FILE_ENV: "./ci/test/00_setup_env_native_nowallet_libgroestlcoinkernel.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV

task:
  name: 'macOS-cross, gui, no tests'
  << : *GLOBAL_TASK_TEMPLATE
  container:
    docker_arguments:
      CI_IMAGE_NAME_TAG: "mirror.gcr.io/ubuntu:24.04"
      FILE_ENV: "./ci/test/00_setup_env_mac_cross.sh"
  env:
    << : *CIRRUS_EPHEMERAL_WORKER_TEMPLATE_ENV
